#! /bin/sh

set -e
set -u

iso=""
imagesize=""
autoinstall=""
output=""

set +u

while true 
do
	if test -z $1
	then
		break
	fi
	
	if test -z $2
	then
		echo "expected argument after flag"
		exit 1
	fi
	
	case $1 in
		-iso)
			iso=$2
		;;
		-imagesize)
			imagesize=$2
		;;
		-autoinstall)
			autoinstall=$2
		;;
		-output)
			output=$2
		;;
		*)
			echo "invalid argument $1"
			exit 1
		;;
	esac
	
	shift
	shift
done

set -u

if test -z $iso
then
	echo "please set -iso"
	exit 1
fi

if test -z $imagesize
then
	echo "please set -imagesize"
	exit 1
fi

if test -z $autoinstall
then
	echo "please set -autoinstall"
	exit 1
fi

tmp=`mktemp -d`

cleanup() {
	rm -rf $tmp
}

trap cleanup EXIT INT

cp $iso $tmp/install.iso
cp $autoinstall $tmp/autoinstall.conf
echo 'set tty com0' > $tmp/boot.conf

growisofs -M "$tmp/install.iso" -l -R -graft-points \
  /autoinstall.conf="$tmp/autoinstall.conf" \
  /etc/boot.conf="$tmp/boot.conf"

qemu-img create -f raw $output $imagesize

expect <<EOF
set timeout 600

spawn qemu-system-x86_64 -nographic \
  -drive if=virtio,file=$output,format=raw -cdrom "$tmp/install.iso" \
  -net nic,model=virtio -net user -boot once=d -smp 2 -m 2048

expect timeout { exit 1 } "\(I\)nstall, \(U\)pgrade, \(A\)utoinstall or \(S\)hell\?"
send "S\n"

expect timeout { exit 1 } "# "
send "mount /dev/cd0c /mnt\n"
send "cp /mnt/autoinstall.conf /\n"
send "umount /mnt\n"
send "install -af /autoinstall.conf\n"
expect timeout { exit 1 } "CONGRATULATIONS"
expect timeout { exit 1 } "# "
send "halt -p\n"
expect timeout { exit 1 } "The operating system has halted"
EOF

